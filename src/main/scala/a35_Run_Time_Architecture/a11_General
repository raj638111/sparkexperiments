
Components
--------------------------------------------------

   #  Driver Program #118
   #  Cluster Managers
   #  Executors
      
Driver Program
--------------------------------------------------
   
   #  Can be launched using,
      +  'spark-submit'

   #  Runs in,
      +  Local Machine (or)
      +  Inside the Cluster (Believe Possible only in YARN & Stand-alone Cluster Manager)
      
   #  Creates Task
      +  Converts the User program into 'Task'(Which are executed in 'Executors')
         (Multiple operations are merged into Tasks #145)
      +  Steps
         -  User program ->
         -  DAG of Operations ->
         -  Stages   ->
         -  Tasks (Tasks are bundled & prepared to be sent to Cluster)
         
   #  Schedule Tasks on Executors
   #  Track Cached Data
      +  RDDs cached by Tasks are tracked by Driver Program to scheduled future Tasks

   #  Accessible from,
      #  http://localhost:4040   (in Local mode)   #119         

Executors
--------------------------------------------------
   
   #  Are launched at the Beginning of Spark program #119
      +  Can be more (or) fewer executors depending on the Availability #129   
   #  Executors running... registers themselves with Driver                     
   #  An Executor can,  #119
      +  Run Tasks & return results to the Driver
      +  Store RDD Data (when an RDD is cached) through 'Block Manager' Service
   #  Are released by Cluster Managers,
      +  When the Driver exits from main() method  (or)
      +  Calls SparkContext.stop()            
   #  More info...
      +  Each executor has a 'Block Manager' 
      +  In Local mode  
         -  Driver & Executor run in the same Java Process
         
Cluster Manager
--------------------------------------------------
   
  #   Launches
      +  Executor &
      +  Driver   (Believe Possible only in YARN & Standalone Cluster Manager) 
   
  #   Available Managers are, #120
      +  YARN
      +  Mesos
      +  Standalone Cluster Manager
          
   

         
             
                          
            
   